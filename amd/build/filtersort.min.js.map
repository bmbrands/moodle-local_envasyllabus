{"version":3,"file":"filtersort.min.js","sources":["../src/filtersort.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the enva filter sorting.\n *\n * @package    local_envasyllabus\n * @copyright  2022 CALL Learning <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Config from 'core/config';\nimport jQuery from 'jquery';\n\n/**\n * Initialise catalog\n *\n * @param filterItemId\n */\nexport const init = (filterItemId) => {\n    const formNode = document.querySelector('#' + filterItemId + ' form');\n    formNode.addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n        // Now we get all the current values from the form.\n        let filterinfo = getFilterData(formNode, false);\n        if (filterinfo) {\n            const event = new CustomEvent('enva-syllabus-catalog-filter', {detail: filterinfo});\n            document.dispatchEvent(event);\n        }\n    });\n};\n/**\n * Serialise array for form so to send it to filters\n *\n * @param {Element} target\n * @param {{bool}} ignoresesskey\n * @returns {unknown[]|boolean}\n */\nconst getFilterData = (target, ignoresesskey) => {\n    let data = jQuery(target).serializeArray();\n    // Check sesskey (if not ignore request).\n    let sesskeyconfirmed = false;\n    let returnedFilter = {};\n\n    let filterarray = [];\n    let sortcriteria = {};\n    data.forEach((d) => {\n            if (d.name === 'sesskey') {\n                sesskeyconfirmed = d.value === Config.sesskey;\n            } else {\n                if (d.value) {\n                    const filtername = d.name.match(/^filter_([^\\[]+)[\\[\\]]*/);\n                    if (filtername) {\n                        // Specific case for multiselect.\n                        if (d.value !== \"_qf__force_multiselect_submission\") {\n                            let filtertype = 'customfield';\n                            if (filtername[1].includes('_ftext_')) {\n                                filtertype = 'fulltext';\n                            }\n                            filterarray.push({\n                                'type': filtertype,\n                                'search': {\n                                    'field': filtername[1],\n                                    'value': d.value\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    )\n    ;\n    const sortfield = data.find((d) => d.name === 'sort');\n    if (sortfield && sortfield.value) {\n        const sortfieldspec = sortfield.value.match(/^(.+)-(.+)/);\n        if (sortfieldspec) {\n            sortcriteria = {\n                'order': sortfieldspec[2],\n                'field': sortfieldspec[1]\n            };\n        }\n    }\n    if (sesskeyconfirmed || ignoresesskey) {\n        if (filterarray) {\n            returnedFilter.filters = filterarray;\n        }\n        if (sortcriteria) {\n            returnedFilter.sort = sortcriteria;\n        }\n        return returnedFilter;\n    }\n    return null;\n};\n"],"names":["filterItemId","formNode","document","querySelector","addEventListener","e","preventDefault","filterinfo","getFilterData","event","CustomEvent","detail","dispatchEvent","target","ignoresesskey","data","serializeArray","sesskeyconfirmed","returnedFilter","filterarray","sortcriteria","forEach","d","name","value","Config","sesskey","filtername","match","filtertype","includes","push","sortfield","find","sortfieldspec","filters","sort"],"mappings":";;;;;;;gLA+BoB,SAACA,kBACXC,SAAWC,SAASC,cAAc,IAAMH,aAAe,SAC7DC,SAASG,iBAAiB,UAAU,SAACC,GACjCA,EAAEC,qBAEEC,WAAaC,cAAcP,UAAU,MACrCM,WAAY,KACNE,MAAQ,IAAIC,YAAY,+BAAgC,CAACC,OAAQJ,aACvEL,SAASU,cAAcH,gBAW7BD,cAAgB,SAACK,OAAQC,mBACvBC,MAAO,mBAAOF,QAAQG,iBAEtBC,kBAAmB,EACnBC,eAAiB,GAEjBC,YAAc,GACdC,aAAe,GACnBL,KAAKM,SAAQ,SAACC,MACS,YAAXA,EAAEC,KACFN,iBAAmBK,EAAEE,QAAUC,gBAAOC,gBAElCJ,EAAEE,MAAO,KACHG,WAAaL,EAAEC,KAAKK,MAAM,8BAC5BD,YAEgB,sCAAZL,EAAEE,MAA+C,KAC7CK,WAAa,cACbF,WAAW,GAAGG,SAAS,aACvBD,WAAa,YAEjBV,YAAYY,KAAK,MACLF,kBACE,OACGF,WAAW,SACXL,EAAEE,kBAUrCQ,UAAYjB,KAAKkB,MAAK,SAACX,SAAiB,SAAXA,EAAEC,WACjCS,WAAaA,UAAUR,MAAO,KACxBU,cAAgBF,UAAUR,MAAMI,MAAM,cACxCM,gBACAd,aAAe,OACFc,cAAc,SACdA,cAAc,YAI/BjB,kBAAoBH,eAChBK,cACAD,eAAeiB,QAAUhB,aAEzBC,eACAF,eAAekB,KAAOhB,cAEnBF,gBAEJ"}