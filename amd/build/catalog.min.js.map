{"version":3,"file":"catalog.min.js","sources":["../src/catalog.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript to initialise the enva syllabus catalog page.\n *\n * @package    local_envasyllabus\n * @copyright  2022 CALL Learning <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport Templates from \"core/templates\";\nimport Config from 'core/config';\n\n/**\n * Initialise catalog\n *\n * @param {int} catalogTagId\n */\nexport const init = (catalogTagId) => {\n    refreshCoursesList(catalogTagId);\n    document.addEventListener('enva-syllabus-catalog-filter', (eventData) => {\n        if (eventData.detail) {\n            refreshCoursesList(catalogTagId, eventData.detail);\n        }\n    });\n};\n\nconst refreshCoursesList = (catalogTagId, filterParams = {}) => {\n    const catalogNode = document.getElementById(catalogTagId);\n    const catalogCourseTag = catalogNode.querySelector('.catalog-courses');\n    const rootCategoryId = JSON.parse(catalogCourseTag.dataset.categoryRootId);\n    repository.getCoursesForCategoryId(rootCategoryId, filterParams).then(\n        (courses) => renderCourses(catalogCourseTag, courses)).catch(displayException);\n};\n/**\n * Render all courses\n *\n * @param {Object} element element to render into\n * @param {Array} courses list of courses with data\n */\nconst renderCourses = (element, courses) => {\n    Templates.render('local_envasyllabus/catalog_course_categories', {\n        sortedCourses: sortCoursesByYearAndSemester(courses)\n    }).then((html, js) => {\n        Templates.replaceNodeContents(element, html, js);\n    }).catch(displayException);\n};\n\n/**\n * Sort courses by year and semester\n *\n * @param {Array} courses\n * @returns {{year: *, semesters: *}[]}\n */\nconst sortCoursesByYearAndSemester = (courses) => {\n    let sortedCourses = {};\n    for (let course of courses.values()) {\n        const yearValue = findValueForCustomField(course, 'uc_annee');\n        const semesterValue = findValueForCustomField(course, 'uc_semestre');\n        if (yearValue) {\n            if (!sortedCourses.hasOwnProperty(yearValue)) {\n                sortedCourses[yearValue] = {\n                    year: yearValue,\n                    semesters: []\n                };\n            }\n            if (semesterValue) {\n                if (!sortedCourses[yearValue].semesters[semesterValue]) {\n                    sortedCourses[yearValue].semesters[semesterValue] = {\n                        semester: semesterValue,\n                        year: yearValue,\n                        courses: []\n                    };\n                }\n                if (course.customfields) {\n                    course.cf = {};\n                    course.customfields.forEach((cf) => {\n                        course.cf[cf.shortname] = cf;\n                    });\n                }\n                course.viewurl = Config.wwwroot + '/course/view.php?id=' + course.id;\n                course.syllabusurl = Config.wwwroot + '/local/envasyllabus/syllabuspage.php?id=' + course.id;\n                sortedCourses[yearValue].semesters[semesterValue].courses.push(course);\n            }\n        }\n    }\n    // Flattern the object into an array.\n    return Object.values(sortedCourses).map(\n        yearDef => {\n            return {\n                year: yearDef.year,\n                semesters: Object.values(yearDef.semesters)\n            };\n        }\n    );\n};\n\n/**\n * Retrieve the value of a give customfield from course data\n *\n * @param {Object} course course data\n * @param {string} cfsname shortname for customfield\n * @param {null|Object|int|String} defaultValue\n * @returns null|Object|int|String\n */\nconst findValueForCustomField = (course, cfsname, defaultValue = null) => {\n    if (typeof course.customfields !== 'undefined') {\n        for (let cf of course.customfields.values()) {\n            if (cf.shortname === cfsname) {\n                return cf.value;\n            }\n        }\n    }\n    return defaultValue;\n};\n"],"names":["catalogTagId","refreshCoursesList","document","addEventListener","eventData","detail","filterParams","catalogNode","getElementById","catalogCourseTag","querySelector","rootCategoryId","JSON","parse","dataset","categoryRootId","repository","getCoursesForCategoryId","then","courses","renderCourses","catch","displayException","element","render","sortedCourses","sortCoursesByYearAndSemester","html","js","replaceNodeContents","values","course","yearValue","findValueForCustomField","semesterValue","hasOwnProperty","year","semesters","semester","customfields","cf","forEach","shortname","viewurl","Config","wwwroot","id","syllabusurl","push","Object","map","yearDef","cfsname","defaultValue","value"],"mappings":"u3FAiCoB,SAACA,cACjBC,mBAAmBD,cACnBE,SAASC,iBAAiB,gCAAgC,SAACC,WACnDA,UAAUC,QACVJ,mBAAmBD,aAAcI,UAAUC,gBAKjDJ,mBAAqB,SAACD,kBAAcM,oEAAe,GAC/CC,YAAcL,SAASM,eAAeR,cACtCS,iBAAmBF,YAAYG,cAAc,oBAC7CC,eAAiBC,KAAKC,MAAMJ,iBAAiBK,QAAQC,gBAC3DC,WAAWC,wBAAwBN,eAAgBL,cAAcY,MAC7D,SAACC,gBAAYC,cAAcX,iBAAkBU,YAAUE,MAAMC,0BAQ/DF,cAAgB,SAACG,QAASJ,4BAClBK,OAAO,+CAAgD,CAC7DC,cAAeC,6BAA6BP,WAC7CD,MAAK,SAACS,KAAMC,uBACDC,oBAAoBN,QAASI,KAAMC,OAC9CP,MAAMC,0BASPI,6BAA+B,SAACP,mBAC9BM,cAAgB,wCACDN,QAAQW,uCAAlBC,mBACCC,UAAYC,wBAAwBF,OAAQ,YAC5CG,cAAgBD,wBAAwBF,OAAQ,eAClDC,YACKP,cAAcU,eAAeH,aAC9BP,cAAcO,WAAa,CACvBI,KAAMJ,UACNK,UAAW,KAGfH,gBACKT,cAAcO,WAAWK,UAAUH,iBACpCT,cAAcO,WAAWK,UAAUH,eAAiB,CAChDI,SAAUJ,cACVE,KAAMJ,UACNb,QAAS,KAGbY,OAAOQ,eACPR,OAAOS,GAAK,GACZT,OAAOQ,aAAaE,SAAQ,SAACD,IACzBT,OAAOS,GAAGA,GAAGE,WAAaF,OAGlCT,OAAOY,QAAUC,gBAAOC,QAAU,uBAAyBd,OAAOe,GAClEf,OAAOgB,YAAcH,gBAAOC,QAAU,2CAA6Cd,OAAOe,GAC1FrB,cAAcO,WAAWK,UAAUH,eAAef,QAAQ6B,KAAKjB,2HAKpEkB,OAAOnB,OAAOL,eAAeyB,KAChC,SAAAC,eACW,CACHf,KAAMe,QAAQf,KACdC,UAAWY,OAAOnB,OAAOqB,QAAQd,gBAc3CJ,wBAA0B,SAACF,OAAQqB,aAASC,oEAAe,aAC1B,IAAxBtB,OAAOQ,aAA8B,kDAC7BR,OAAOQ,aAAaT,gEAAU,KAApCU,mBACDA,GAAGE,YAAcU,eACVZ,GAAGc,mEAIfD"}